mqtt = {
	template = [
		{
			source = "MQTT/template-mqtt.c"
			destination = ${migrate.result}"MQTT/mqtt.c"
		}
		{
			source = "MQTT/template-mqtt.h"
			destination = ${migrate.result}"MQTT/mqtt.h"
		}		
	]
	debug = {
		level = ${train.debug.level}
	}
	buffer={
		tx=512
		rx=512
	}
	station={
		name=mqttStation
		route=ROUTE_MQTT
		railType=RailMqtt_st
		railName=railMqtt
		train=mqttTrain
		parcel=mqttParcel
		parcels=4
		unloader=sendTrainsFromDepot
	}
	error={
		route=ROUTE_TCP
	}
	timeout = 1
	port = 1883
	options={
		keepalive = 500
		topic = RFID
		qos = QOS0
		id=sensor
		uname=guest
		password=guest
	}
	topics=[
		{
			name = MQTT_GET
			value = "/get" 
			command = COMMAND_REST_GET
			separator = COMMAND_REST_SEP_SPACE
			loader=NULL
			handler=getHarnler
			qos=QOS0
			to={
				route=ROUTE_JSON
				command=ROUTE_JSON_GET_MQTT
				loader=sendTrainsFromDepot
			}
			from={
				railType=RailTcp_st
				railName=railTcp
				command=COMMAND_MQTT_READ
				carNumber=1
			}
		}
		{
			name = MQTT_GETV
			value = "/getv" 
			command = COMMAND_REST_GETV
			separator = COMMAND_REST_SEP_SPACE
			loader=NULL
			handler=getvHarnler
			qos=QOS0
			to={
				route=ROUTE_JSON
				command=ROUTE_JSON_GET_MQTT
				loader=sendTrainsFromDepot
			}
			from={
				railType=RailTcp_st
				railName=railTcp
				command=COMMAND_MQTT_READ
				carNumber=1
			}
		}
	]
	pathways = [
		{		
			from={
				railType=RailJson_st
				railName=railJson
				command=COMMAND_MQTT_SEND
				carNumber=2
			}	
			to={
				route=NULL
				command=NULL
				loader=MQTTPublish
			}
		}
	]
}