serial{
	template = [
		{
			source = "Serial/template-serial.c"
			destination = ${migrate.result}"Serial/serial.c"
		}
		{
			source = "Serial/template-serial.h"
			destination = ${migrate.result}"Serial/serial.h"
		}		
	]
	debug={
		level = ${train.debug.level}
	}
	type={
		observer=true
		master=false
	}
	buffer={
		tx=128
		rx=128
	}
	defines = [
		{
			name=SOCKET_USART_RX
			value:1
		}
		{
			name=SOCKET_USART_TX
			value:2
		}
	]
	sockets = [
		{
			id = SOCKET_USART_RX
			function = _uartDmaIO
			descriptor = DmaSocket_st
			callback = _uartDmaCountIO
		}
		{
			id = SOCKET_USART_TX
			function = _uartDmaIO
			descriptor = DmaSocket_st
			callback = _uartDmaCountIO
		}
	]
	station={
		name=serialStation
		route=ROUTE_SERIAL
		railType=RailSerial_st
		railName=railSerial
		train=serialTrain
		parcel=serialParcel
		parcels=4
		unloader=sendTrainsFromDepot
	}
	pathways = [
		{
			from={
				railType=RailBle_st
				railName=railBle
				command=COMMAND_SERIAL_READ_OBSERVER
				loader=sendSerialAsync
				carNumber=1
				socket = getBleRxSocket()
			}
			to={
				route=ROUTE_BLE
				command=COMMAND_SERIAL_READ_OBSERVER
				loader=false
			}
		}
		{
			from={
				railType=RailBle_st
				railName=railBle
				command=COMMAND_SERIAL_SEND
				loader=sendSerialAsync
				carNumber=1
				socket = getBleTxSocket()
			}
			to={
				route=ROUTE_BLE
				command=COMMAND_SERIAL_SEND
				loader=false
			}
		}
	]
}