flash = {
	template = [
		{
			source = "Memory/Flash/template-flash.c"
			destination = ${migrate.result}"Memory/Flash/flash.c"
		}
		{
			source = "Memory/Flash/template-flash.h"
			destination = ${migrate.result}"Memory/Flash/flash.h"
		}		
	]
	debug = {
		level = ${train.debug.level}
	}
	buffer={
		tx=64
		rx=64
	}
	station={
		name = NULL
	}
	defines = [
		{
			name = MEMORY_OVERFLOW
			value =  0xFF
		}
		{
			name = SECTOR_SIZE
			value =  128
		}
		{
			name = PAGE_SIZE
			value =  32
		}
		{
			name = BOOT_PAGE
			value =  0
		}
		{
			name = DATABASE_PAGE
			value =  64
		}
		{
			name = FLASH_ADDRESS_START
			value =  (uint32_t)flashTestArray
		}
		{
			name = FLASH_ADDRESS_END
			value =  (uint32_t)flashTestArray+sizeof(flashTestArray)
		}
	]
	states = [
		{
			case: initialize
			break: false
			function: calcSectors
			next: erase
		}
		{
			case: erase
			break: false
			function: eraseData
			next: rest
		}
		{
			case: rest
			break: false
			function: restFill
			next: writeRest
		}
		{
			case: writeRest
			break: false
			function: restWrite
			next: writeData
		}
		{
			case: writeData
			break: false
			function: writePages
			next: sync
		}
		{
			case: sync
			break: false
			function: restSync
			next: initialize
		}
	]
}