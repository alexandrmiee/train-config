include required("Internet/Telnet.conf")
include required("Internet/TCP.conf")
include required("Internet/UDP.conf")
include required("Internet/HTTP.conf")
include required("Internet/SNMP.conf")
include required("JSON/JSON.conf")
include required("Files/Files.conf")
include required("Database/Database.conf")
include required("MQTT/MQTT.conf")
include required("Memory/Flash/Flash.conf")
include required("AT/BLE.conf")
include required("Serial/Serial.conf")
include required("OneWire/OneWire.conf")
include required("Keil/Keil.conf")


migrate={
	result = "C:/CCpp/TrainTest/" 
	path=[
		{
			source="Core/"
			dest=${migrate.result}"Core/"
		}
		{
			source="MQTT/MQTTClient"
			dest=${migrate.result}"MQTT/MQTTClient"
		}
		{
			source="MQTT/MQTTPacket"
			dest=${migrate.result}"MQTT/MQTTPacket"
		}
		{
			source="Memory/Flash/JDEC"
			dest=${migrate.result}"Memory/Flash/JDEC"
		}
		{
			source="Tests/Event/"
			dest=${migrate.result}"Event/"
		}
		{
			source="REST/"
			dest=${migrate.result}"REST/"
		}
		{
			source="Tests/Secure/"
			dest=${migrate.result}"Secure/"
		}
	]
}

train.debug.level = DEBUG_TRACE
port = 1883

test:{ 
	source = "Tests/template-test-memory.c"
			#"Tests/template-test.c"
			#"Tests/template-test-telnet.c"
			#"Tests/template-test-http.c"
			#"Tests/template-test-mqtt.c"
			#"Tests/template-test-snmp.c"
			#"Tests/template-test-ble.c"
	destination = ${migrate.result}
	name = "memory"
}



modules = [
	tcp
	telnet
	json
	http
	files
	database
	mqtt
	udp
	snmp
	flash
	serial
	ow
	ble
]


tcp.station.carNumber=0
serial.station.carNumber=0
ble.station.carNumber=1
telnet.station.carNumber=1
http.station.carNumber=1
mqtt.station.carNumber=1
json.station.carNumber=2
files.station.carNumber=2

migrate.result = "C:/CCpp/iSensor/"
iSensor={
	
		migrate : { include "Migrate.conf" }
		migrate : {	
			path=[
				{
					source="Core/"
					dest=${migrate.result}"Core/"
				}
				{
					source="Memory/Flash/JDEC/"
					dest=${migrate.result}"Memory/Flash/JDEC/"
				}
				{
					source="REST/"
					dest=${migrate.result}"REST/"
				}
			] 
		}
		files : { include "Files/Files.conf" }
		files : 
		{	
			files=[]
		}
		stations=[
			files #include "Files/Files.conf"
			database #include "Database/Database.conf"
			flash #include "Memory/Flash/Flash.conf"
			serial #include "Serial/Serial.conf" 
			ow #include "OneWire/OneWire.conf"
			ble #include "AT/BLE.conf"
			json
		]
		test:{ 
			source= "Tests/template-test-memory.c"
			destination = ${migrate.result}
			name = "iSensor"
		}
		keil : { include "Keil/Keil.conf" }
}
